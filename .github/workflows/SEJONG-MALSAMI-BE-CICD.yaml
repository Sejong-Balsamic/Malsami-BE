name: SEJONG-MALSAMI-BE-CICD

on:
  push:
    branches:
      - main
      - test
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # application-prod.yml 파일을 빌드 전에 생성
      - name: Create application-prod.yml from secret
        run: |
          echo "${{ secrets.APPLICATION_PROD_YML }}" > ./src/main/resources/application-prod.yml

      # prod 프로파일을 활성화하여 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test -Dspring.profiles.active=prod

      - name: Docker setup
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sejong-malsami-back-container:${{ github.ref_name }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/sejong-malsami-back-container:cache
          cache-to: type=inline

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 2022
          script: |
            export PATH=$PATH:/usr/local/bin
            export PW=${{ secrets.SERVER_PASSWORD }}
            BRANCH=${{ github.ref_name }}
            PORT=8080
            CONTAINER_NAME="sejong-malsami-back"
            if [ "$BRANCH" == "main" ]; then
              PORT=8087
            elif [ "$BRANCH" == "test" ]; then
              CONTAINER_NAME="sejong-malsami-back-test"
              PORT=8088
            fi
            echo $PW | sudo -S docker pull ${{ secrets.DOCKERHUB_USERNAME }}/sejong-malsami-back-container:${BRANCH}
            echo $PW | sudo -S docker stop $CONTAINER_NAME || true
            echo $PW | sudo -S docker rm $CONTAINER_NAME || true
            echo $PW | sudo -S docker run -d -p ${PORT}:8080 --name $CONTAINER_NAME \
              -e TZ=Asia/Seoul \
              -e "SPRING_PROFILES_ACTIVE=prod" \
              -v /etc/localtime:/etc/localtime:ro \
              ${{ secrets.DOCKERHUB_USERNAME }}/sejong-malsami-back-container:${BRANCH}
